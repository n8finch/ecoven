@import "compass/css3";

$bgColor: #fef8ee;
$brandGreen: #047c3f;
$bgGreen: #045f1a;
$linkBlue: #0070af;
$headerBlue: #0772b4;
// $gray: #5a5a5a;
// $grayText: #636467;
// $lightGray: #dfdfdf;

$pad: 10px;

// Enable SVG support for gradients in IE9
$experimental-support-for-svg: true;

@mixin font-stack-body-normal {
	font-family: "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
	font-weight: 400;
}

@mixin font-stack-body-nav {
	font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
	font-weight: 300;
}

@mixin font-stack-headers {
	font-family: "Anton", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
	font-weight: 400;
	letter-spacing: 0.05em;
}

@mixin breakpoint($point) {
	@if $point == middle {
		@media (max-width: 1250px) { @content; }
	}
	@if $point == small {
		@media (max-width: 750px) { @content; }
	}
	@if $point == very-small {
		@media (max-width: 500px) { @content; }
	}
	@if $point == nav-middle {
		@media (max-width: 1140px) { @content; }
	}
	@if $point == nav-small {
		@media (max-width: 850px) { @content; }
	}
	@if $point == reverse-nav-small {
		@media (min-width: 850px) { @content; }
	}
	@if $point == reverse-middle {
		@media (min-width: 940px) { @content; }
	}
	@if $point == reverse-small {
		@media (min-width: 750px) { @content; }
	}
}

// calc-rem: calculate the rem value based on the desired pixel
// value versus a context value, usually the default font size
$default-font-size: 16px !default;

@function calc-rem( $target, $context: $default-font-size ) {
	@return $target / $context * 1rem;
}

// Shorthand redeclaration of the above
@function cr( $target, $context: $default-font-size ) {
	@return calc-rem( $target, $context );
}

// Strip units from values
@function strip-unit($num) {
	@return $num / ($num * 0 + 1);
}

// Provide rem-fallbacks
@mixin rem($property, $values...) {
	$max: length($values);
	$pxValues: '';
	$remValues: '';

	@for $i from 1 through $max {
		$value: strip-unit(nth($values, $i));
		$pxValues: #{$pxValues + $value*16}px;

		@if $i < $max {
			$pxValues: #{$pxValues + " "};
		}
	}

	@for $i from 1 through $max {
		$value: strip-unit(nth($values, $i));
		$remValues: #{$remValues + $value}rem;

		@if $i < $max {
			$remValues: #{$remValues + " "};
		}
	}

	#{$property}: $pxValues;
	#{$property}: $remValues;
}

////////////// hide text ////////////
// Kellum Method
// http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
@mixin hide_text {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}
////////////// hide text ////////////

%hide_text {
	@include hide_text;
}

/////// clearfix //////////
@mixin clearfix {
	*zoom: 1;
	&:before, &:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}
/////// clearfix //////////

%clearfix {
	@include clearfix;
}
// usage: .block { @extend %clearfix }

%dates_table {
	width: 100%;
	@include rem(font-size, 0.75);
	tr {
		td {
			border-right: 1px solid $brandGreen;
			padding: 0 10px 10px;
			vertical-align: top;

			&:first-child {
				padding-left: 0;
			}
			&:last-of-type {
				border-right: 0;
			}
		}
		&:last-child {
			td {
				padding-bottom: 0;
			}
		}
	}
}
